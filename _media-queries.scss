$breakpoints: (
  'xs': 0,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px
);

@mixin media-breakpoint-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin media-breakpoint-down($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint) - 1px) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin media-breakpoint-between($start, $end) {
  $start-pixel: map-get($breakpoints, $start);
  $end-pixel: map-get($breakpoints, $end);

  @if $start-pixel and $end-pixel {
    @media (min-width: $start-pixel) and (max-width: $end-pixel - 1px) {
      @content;
    }
  } @else {
    @error "Invalid breakpoints: #{$start}, #{$end}.";
  }
}

@mixin media-breakpoint-only($breakpoint) {
  $next-breakpoint: null;

  @each $bp, $val in $breakpoints {
    @if $bp == $breakpoint {
      @if $next-breakpoint {
        @media (min-width: #{$val}) and (max-width: #{$next-breakpoint} - 1px) {
          @content;
        }
      } @else {
        @media (min-width: #{$val}) {
          @content;
        }
      }
    }

    $next-breakpoint: $val;
  }
}


//Usage
.my-class {
  // Default styles...

  @include media-breakpoint-up('sm') {
    // Styles for small breakpoint and up...
  }

  @include media-breakpoint-between('md', 'lg') {
    // Styles between medium and large breakpoints...
  }

  @include media-breakpoint-only('xl') {
    // Styles only for extra-large breakpoint...
  }
}
